<%# Using jQuery SelectToUISlider by Filament group: http://bit.ly/18SLhE #%>
<% @stylesheets << ["sleeps.css", "ui.slider.extras.css"] %>
<% @javascripts << ["jquery-ui-personalized-1.6rc6.js","selectToUISlider.jQuery.js"] %>
<% @title_text="Your Sleep"%>
 
<h1>New <span class="teal">sleep</span></h1>
<div class="blueback">
 
<% 
increment = 15
form_for @sleep, :sleep, :url => {:action => :create_sleep_backend} do |f| %>
<fieldset id="sleep-picker">
  <%= f.error_messages %>
  <span class="reg">
  Where
	<%= f.text_field :zip, :value => @user.zip, :size => "10" %>
	<%= f.label :quality %>
 	<% # used to have the real implementation, order problem was shitty though: = select(:sleep, :quality, Sleep::QUALITY, {:selected=>@sleep.quality}) %>
  	<select id="sleep_quality" name="sleep[quality]">
		<option value=" "> </option>
		<option value="1">Abysmal</option>
		<option value="2">Restless</option>
		<option value="3">Okay</option>
		<option value="4">Restful</option>
		<option value="5">Serene</option>
	</select>
	<%= f.label :note %>
	<%= f.text_field :note %>
  Date:   </span><input id="datepicker" type="text" name="sleep[date]" value="today" />
    <%= f.submit "Create" %>
    <label class="hidemeonload" for="start">From:</label>
    <select class="hidemeonload" name="start" id="start">
      <% now = Time.now - ((Time.now.min).to_f).minutes - ((Time.now.hour).to_f).hours - 8.hours %>
      <optgroup label="<%= now.strftime("%d %b")%>">
        <% while now < Time.now - ((Time.now.min).to_f).minutes - ((Time.now.hour).to_f).hours - 8.hours + 1.days
          if now.hour == 0 and now.min == 0 %>
            </optgroup>
            <optgroup label="<%= now.strftime("%d %b")%>"><%
          end %>
          <option value="<%= now.strftime("%I:%M%p")%>" <%
            if now.hour == 1 and now.min == 0
              %>selected="selected" <%
            end
          %>><%= now.strftime("%I:%M%p")%></option><%
          now += increment.minutes            
        end %>
      </optgroup>
    </select>
    <label class="hidemeonload" for="stop">To:</label>
    <select class="hidemeonload" name="stop" id="stop">
      <% now = Time.now - ((Time.now.min).to_f).minutes - ((Time.now.hour).to_f).hours - 8.hours %>
      <optgroup label="<%= now.strftime("%d %b")%>">
        <% while now < Time.now - ((Time.now.min).to_f).minutes - ((Time.now.hour).to_f).hours - 8.hours + 1.days
          if now.hour == 0 and now.min == 0 %>
            </optgroup>
            <optgroup label="<%= now.strftime("%d %b")%>"><%
          end %>
          <option value="<%= now.strftime("%I:%M%p")%>"<%
            if now.hour == 9 and now.min == 0
              %>selected="selected" <%
            end
          %>><%= now.strftime("%I:%M%p")%></option><%
          now += increment.minutes            
        end %>
      </optgroup>
    </select>
  </fieldset>
 
<% end %>
</div>
 
<% @count = 0 %>
<h1>Listing sleeps of <span class="teal"><%= @user.realname %></span></h1>
<div class="blueback">
<% if !@sleeps.empty? %>
    <table>
      <tr>
        <th>Start</th>
        <th>Stop</th>
		<th>Length</th>
        <th>Zip</th>
        <th>Quality</th>
        <th>Note</th>
      </tr>
  
    <% for sleep in @sleeps %>
    <% @classstring = "" %>
    <% @count+=1 %>
    <% if @count%2 == 1
      @classstring = "zebra "
     end
     if @count > 3
      @classstring += "hideme hidden"
     end %>
     <tr class="<%= @classstring %>">
        <td class="wide"><%=h sleep.start.strftime("%a, %m/%d/%y %I:%M%p") %></td>
        <td class="wide"><%=h sleep.stop.strftime("%a, %m/%d/%y %I:%M%p") %></td>
		<td><%= ((sleep.stop - sleep.start)/3600).to_s[0..3] %> hours</td>
        <td><%=h sleep.zip %></td>
        <td><%=h Sleep::QUALITY_BACKWARDS[sleep.quality] %></td>
        <td><%=h sleep.note %></td>
        <td><%= link_to 'Edit', edit_sleep_path(sleep) %></td>
        <td><%= link_to 'Delete', sleep, :confirm => 'Are you sure?', :method => :delete %></td>
      </tr>
    <% end %>
    </table>
<% else %>
    <%= @user.realname %> is not tracking any sleep :-(<br />
<% end %>
 
<div class="box"><a id="show_all" href="#" onclick="">Show All</a><a id="hide_all" href="#">Hide All</a></div>
</div>
 
<h1>Your Sleep <span class="teal">This Week</span></h1>
<div class="blueback"> 
  <%= render :partial => "partials/chart.html.erb", :locals => @chart = { "start" => @start, "stop" => @stop} %>
	<% form_for :chart, :url => {:action => :index} do |f| %>
		Chart dates:
		Start: <input id="datepicker_from" type="text" name="chart[start]" value="today" />
		End: <input id="datepicker_to" type="text" name="chart[stop]" value="today" />
		<%= f.submit "Update" %><br /><br />
	<% end %>

</div>

<br />
<script type="text/javascript">
$(document).ready(function() {
  $("a#show_all").click(function() {
    $("tr.hideme").removeClass("hidden")
  });
  $("a#hide_all").click(function() {
    $("tr.hideme").addClass("hidden")
  });
  
  
  var monthnames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
  $("#datepicker").datepicker({ dateFormat: 'd M' });
  $("#datepicker_from").datepicker({ dateFormat: 'd M' });
  $("#datepicker_to").datepicker({ dateFormat: 'd M' });


  $('select#start, select#stop').selectToUISlider({
    labels: 12
  });

  $('.hidemeonload').addClass("hidden");
  
  $('#datepicker').change(function() {
    var value = $(this).datepicker( "getDate" );
    var myDate=new Date(value);
    myDate.setDate(myDate.getDate()-1);

    $('.date_1').html("<span>" + value.getDate() + " " + monthnames[value.getMonth()] + "</span>");
    $('.date_0').html("<span>" + myDate.getDate() + " "+ monthnames[myDate.getMonth()] + "</span>");
 });
});
</script>